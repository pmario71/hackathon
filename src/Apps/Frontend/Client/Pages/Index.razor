@page "/"
@using Frontend.Shared

@inject HttpClient _httpClient;

<PageTitle>Index</PageTitle>

<h1>Trigger Test Scenarios</h1>

<table class="table">
    <thead>
        <tr>
            <th>Action</th>
            <th>Description</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td><button class="btn btn-secondary btn-lg" style="width: 150px;height: 80px" disabled="@_teststatus.TestRunning" @onclick="OnStartRegressionTest">Regression Test</button></td>
            <td>Run regression tests, that make sure that all implemented functionality works end-to-end.</td>
        </tr>
        <tr>
            <td><button class="btn btn-secondary btn-lg" style="width: 150px;height: 80px" disabled="@_teststatus.TestRunning" @onclick="OnStartStressTest">Stress Test</button></td>
            <td>Run stress tests, that make sure that all implemented functionality works end-to-end.</td>
        </tr>
    </tbody>
</table>

@if (_teststatus.TestRunning)
{
    <div class="jumbotron bg-light" style="padding: 6px" >
        
        <h4>Test running ...</h4>
        @_teststatus.TestStatusMessage

    </div>    
}

@code {
    TestStatus _teststatus = new TestStatus();

    private async Task OnStartRegressionTest()
    {
        var request = new StartTestRequest { TestLevel = TestLevel.RegressionTest };
        await _httpClient.PostAsJsonAsync<StartTestRequest>("TestControl", request);

        _teststatus.TestStarted("Started Regression Test!");
    }

    private async Task OnStartStressTest()
    {
        var request = new StartTestRequest { TestLevel = TestLevel.StressTest };
        await _httpClient.PostAsJsonAsync<StartTestRequest>("TestControl", request);

        _teststatus.TestStarted("Started Stress Test!");
    }

    class TestStatus
    {
        public bool TestRunning { get; private set; } = false;
        public string TestStatusMessage { get; private set; } = string.Empty;

        public void TestStarted(string message)
        {
            TestStatusMessage = message;
            TestRunning = true;
        }

        public void TestStopped(string message)
        {
            TestStatusMessage = message;
            TestRunning = false;
        }
    }
}

